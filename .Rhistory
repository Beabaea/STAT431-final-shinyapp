alldat <- readxl::read_xlsx(here::here("HumanMelDat.xlsx"))
View(alldat)
library(dplyr)
View(alldat)
alldat <- readxl::read_xlsx(here::here("HumanMelDat.xlsx")) %>%
select("GENE,SAMPLE")
alldat <- readxl::read_xlsx(here::here("HumanMelDat.xlsx")) %>%
select("GENE","SAMPLE")
alldat <- readxl::read_xlsx(here::here("HumanMelDat.xlsx")) %>%
select(GENE,SAMPLE)
#create new data sets to be used for shiny
alldat %>% group_by(SAMPLE) %>% table()
#create new data sets to be used for shiny
alldat %>% group_by(SAMPLE) %>% table(.x$GENE)
#create new data sets to be used for shiny
alldat %>% group_by(SAMPLE) %>% table(.$GENE)
#create new data sets to be used for shiny
alldat %>% group_by(SAMPLE) %>% print()
unique(alldat$SAMPLE
)
#create new data sets to be used for shiny
split(alldat, alldat$GENE)
#create new data sets to be used for shiny
listWsamples<- split(alldat, alldat$GENE)
View(listWsamples)
View(listWsamples)
#create new data sets to be used for shiny
listWsamples<- split(alldat, alldat$SAMPLE)
View(listWsamples)
#create new data sets to be used for shiny
listWgenes<- split(alldat, alldat$SAMPLE)
View(listWgenes)
listWgenes[[1]]
table(listWgenes[[1]])
as.data.frame(table(listWgenes[[1]]))
as.data.frame(table(listWgenes[[1]]$GENE))
listWgenes[1]
View(alldat)
View(listWgenes)
names(listWgenes)[1]
names(listWgenes)[1]<- as.data.frame(table(listWgenes[[1]]$GENE))
x <- as.data.frame(table(listWgenes[[1]]$GENE))
name <- names(listWgenes)[1]
assign(name, x)
name <- names(listWgenes)[1]
names(listWgenes)[1]
listWgenes
names(listWgenes)
alldat <- readxl::read_xlsx(here::here("HumanMelDat.xlsx")) %>%
select(GENE,SAMPLE)
#create new data sets to be used for shiny
#makes a big list with each obs a sample
listWgenes<- split(alldat, alldat$SAMPLE)
name <- names(listWgenes)[1]
x <- as.data.frame(table(listWgenes[[1]]$GENE))
assign(name, x)
length(listWgenes)
for (i in 1:length(listWgenes)){
name <- names(listWgenes)[1]
x <- as.data.frame(table(listWgenes[[1]]$GENE))
assign(name, x)
}
for (i in 1:length(listWgenes)){
name <- names(listWgenes)[i]
x <- as.data.frame(table(listWgenes[[i]]$GENE))
assign(name, x)
}
View(D04_LSN01)
t(DO4_LAC05)
t(DO4_LAC05)
t(D04_LAC05)
merge(t(D04_LSN01), t(D04_LSN02))
merge_all(t(D04_LSN01), t(D04_LSN02))
pivot_wider(D04_LAC05)
library(dplyr)
library(tidyr)
pivot_wider(D04_LAC05,
names_from = Var1,
values_from = Freq)
for (i in 1:length(listWgenes)){
name <- names(listWgenes)[i]
x <- as.data.frame(table(listWgenes[[i]]$GENE)) %>%
pivot_wider(names_from = Var1,
values_from = Freq)
assign(name, x)
}
View(D13_MIS19)
merge(D04_LSN01, D04_LSN02, all=TRUE)
View(merge(D04_LSN01, D04_LSN02, all=TRUE))
for (i in 1:length(listWgenes)){
name <- names(listWgenes)[i]
x <- as.data.frame(table(listWgenes[[i]]$GENE)) %>%
pivot_wider(names_from = Var1,
values_from = Freq) %>%
mutate(ID = name)
assign(name, x)
}
View(merge(D04_LSN01, D04_LSN02, all=TRUE))
for (i in 1:length(listWgenes)){
name <- names(listWgenes)[i]
x <- as.data.frame(table(listWgenes[[i]]$GENE)) %>%
pivot_wider(names_from = Var1,
values_from = Freq) %>%
mutate(ID = name) %>%
select(ID, everything())
assign(name, x)
}
View(merge(D04_LSN01, D04_LSN02, all=TRUE))
substr(names(listWgenes),
1,7)
print(i)
for (i in newlists){
print(i)
}
#isolates the names merge
newlists<-substr(names(listWgenes),
1,7)
for (i in newlists){
print(i)
}
#isolates the names merge
newlists<-unique(substr(names(listWgenes),
1,7))
for (i in newlists){
print(i)
}
newlists[1]
alldat <- readxl::read_xlsx(here::here("HumanMelDat.xlsx")) %>%
select(GENE,SAMPLE) %>%
filter( SAMPLe != D04_LAC05)
alldat <- readxl::read_xlsx(here::here("HumanMelDat.xlsx")) %>%
select(GENE,SAMPLE) %>%
filter(SAMPLE != 'D04_LAC05')
alldat <- readxl::read_xlsx(here::here("HumanMelDat.xlsx")) %>%
select(GENE,SAMPLE) %>%
filter(SAMPLE != 'D04_LAC05')
#create new data sets to be used for shiny
#makes a big list with each obs a sample
listWgenes<- split(alldat, alldat$SAMPLE)
for (i in 1:length(listWgenes)){
name <- names(listWgenes)[i]
x <- as.data.frame(table(listWgenes[[i]]$GENE)) %>%
pivot_wider(names_from = Var1,
values_from = Freq) %>%
mutate(ID = name) %>%
select(ID, everything())
assign(name, x)
}
#making new lists with df to then merge
D04_LSN<-list(D04_LSN01, D04_LSN02, D04_LSN03,
D04_LSN04, D04_LSN05)
#making new lists with df to then merge
#note only those with 3+ df are used
D04_LSN <- list(D04_LSN01, D04_LSN02, D04_LSN03,
D04_LSN04, D04_LSN05) %>% reduce(full_join, by='ID')
library(tidyverse)
#making new lists with df to then merge
#note only those with 3+ df are used
D04_LSN <- list(D04_LSN01, D04_LSN02, D04_LSN03,
D04_LSN04, D04_LSN05) %>% reduce(full_join, by='ID')
View(D04_LSN)
#making new lists with df to then merge
#note only those with 3+ df are used
D04_LSN <- list(D04_LSN01, D04_LSN02, D04_LSN03,
D04_LSN04, D04_LSN05) %>%
reduce(full_join, by='ID') %>%
replace_na(.x,0)
#making new lists with df to then merge
#note only those with 3+ df are used
D04_LSN <- list(D04_LSN01, D04_LSN02, D04_LSN03,
D04_LSN04, D04_LSN05) %>%
reduce(full_join, by='ID') %>%
replace_na(0)
#making new lists with df to then merge
#note only those with 3+ df are used
D04_LSN <- list(D04_LSN01, D04_LSN02, D04_LSN03,
D04_LSN04, D04_LSN05) %>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
D04_LSR <- list(D04_LSR01, D04_LSR02, D04_LSR03,
D04_LSR04, D04_LSR05, D04_LSR06,
D04_LSR09)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
D04_RBT <- list(D04_RBT02, D04_RBT06, D04_RBT12,
D04_RBT20)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
alldat <- readxl::read_xlsx(here::here("HumanMelDat.xlsx")) %>%
select(GENE,SAMPLE) %>%
filter(SAMPLE != 'D04_LAC05')
#create new data sets to be used for shiny
#makes a big list with each obs a sample
listWgenes<- split(alldat, alldat$SAMPLE)
for (i in 1:length(listWgenes)){
name <- names(listWgenes)[i]
x <- as.data.frame(table(listWgenes[[i]]$GENE)) %>%
pivot_wider(names_from = Var1,
values_from = Freq) %>%
mutate(ID = name) %>%
select(ID, everything())
assign(name, x)
}
#making new lists with df to then merge
#note only those with 3+ df are used
D04_LSN <- list(D04_LSN01, D04_LSN02, D04_LSN03,
D04_LSN04, D04_LSN05) %>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
D04_LSR <- list(D04_LSR01, D04_LSR02, D04_LSR03,
D04_LSR04, D04_LSR05, D04_LSR06,
D04_LSR09)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
D04_RBT <- list(D04_RBT02, D04_RBT06, D04_RBT12,
D04_RBT20)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
D06_BCC <- list(D06_BCC01, D06_BCC03, D06_BCC04,
D06_BCC05, D06_BCC09)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
D06_MIS <- list(D06_MIS03, D06_MIS04, D06_MIS06,
D06_MIS07, D06_MIS08, D06_MIS10,
D06_MIS11, D06_MIS12)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
D07_LAC <- list(D07_LAC03, D07_LAC04, D07_LAC05)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
D12_RBK <- list(D12_RBK01, D12_RBK02, D12_RBK03)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
D13_MIS <- list(D13_MIS07, D13_MIS08, D13_MIS17,
D13_MIS19, D13_MIS20, D13_MIS21)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)
dat <- D04_LSN
dist(dat)
#use PC
PCdat <- princomp(dat)
#use PC
PCdat <- princomp(dat)
#use PC
dist(dat)
dat <- D06_MIS
#use PC
dist(dat)
hclust(distmatrix)
#use PC
distmatrix<-dist(dat)
hclust(distmatrix)
plot(hclust)
plot(hclust(distmatrix))
dat[,-1]
#use PC
distmatrix<-dist(dat[,-1])
dathclust<-hclust(distmatrix)
plot(hclust(distmatrix))
View(dathclust)
dathclust$labels <- dat$ID
plot(hclust(distmatrix))
dathclust[["order"]]
dathclust$labels
plot(hclust(distmatrix))
plot(hclust(distmatrix), labels = T)
plot(dathclust)
startplot <- function(dat){
#use PC
distmatrix<-dist(dat[,-1])
dathclust<-hclust(distmatrix)
dathclust$labels <- dat$ID
plot(dathclust)
}
startplot(D13_MIS)
startplot(D12_RBK)
heatmap(dathclust)
heatmap(distmatrix)
str(distmatrix)
class(distmatrix)
heatmap(as.matrix(distmatrix))
#use PC
distmatrix<-dist(dat)
#use PC
rownames(dat)
#use PC
rownames(dat) <- dat$ID
distmatrix<-dist(dat[,-1])
heatmap(as.matrix(distmatrix))
distmatrix<-dist(dat[,-1])
dat <- D06_MIS
#use PC
rownames(dat) <- dat$ID
D13_MIS <- list(D13_MIS07, D13_MIS08, D13_MIS17,
D13_MIS19, D13_MIS20, D13_MIS21)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0)%>%
as.data.frame()
dat <- D13_MIS
#use PC
rownames(dat) <- dat$ID
rownames(dat)
distmatrix<-dist(dat[,-1])
heatmap(as.matrix(distmatrix))
#making new lists with df to then merge
#note only those with 3+ df are used
D04_LSN <- list(D04_LSN01, D04_LSN02, D04_LSN03,
D04_LSN04, D04_LSN05) %>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0) %>%
as.data.frame()
D04_LSR <- list(D04_LSR01, D04_LSR02, D04_LSR03,
D04_LSR04, D04_LSR05, D04_LSR06,
D04_LSR09)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0) %>%
as.data.frame()
D04_RBT <- list(D04_RBT02, D04_RBT06, D04_RBT12,
D04_RBT20)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0) %>%
as.data.frame()
D06_BCC <- list(D06_BCC01, D06_BCC03, D06_BCC04,
D06_BCC05, D06_BCC09)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0) %>%
as.data.frame()
D06_MIS <- list(D06_MIS03, D06_MIS04, D06_MIS06,
D06_MIS07, D06_MIS08, D06_MIS10,
D06_MIS11, D06_MIS12)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0) %>%
as.data.frame()
D07_LAC <- list(D07_LAC03, D07_LAC04, D07_LAC05)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0) %>%
as.data.frame()
D12_RBK <- list(D12_RBK01, D12_RBK02, D12_RBK03)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0) %>%
as.data.frame()
D13_MIS <- list(D13_MIS07, D13_MIS08, D13_MIS17,
D13_MIS19, D13_MIS20, D13_MIS21)%>%
reduce(full_join, by='ID') %>%
replace(is.na(.), 0) %>%
as.data.frame()
dat <- D06_MIS
dat <- D06_MIS
#use PC
rownames(dat) <- dat$ID
distmatrix<-as.matrix(dist(dat[,-1]))
dathclust<-hclust(distmatrix)
distmatrix<-as.matrix(dist(dat[,-1]))
dat <- D06_MIS
#use PC
rownames(dat) <- dat$ID
distmatrix<-as.matrix(dist(dat[,-1]))
dathclust<-hclust(distmatrix)
dat <- D06_MIS
#use PC
rownames(dat) <- dat$ID
distmatrix<-dist(dat[,-1])
dathclust<-hclust(distmatrix)
dathclust$labels <- dat$ID
plot(dathclust)
heatmap(as.matrix(distmatrix))
startplot <- function(dat){
#use PC
rownames(dat) <- dat$ID
distmatrix<-dist(dat[,-1])
dathclust<-hclust(distmatrix)
dathclust$labels <- dat$ID
#plots typical dendrogram
plot(dathclust)
#or plots heat map that shows similarity
heatmap(as.matrix(distmatrix))
}
startplot(D04_LSR)
startplot <- function(dat,heatmap=F){
#use PC
rownames(dat) <- dat$ID
distmatrix<-dist(dat[,-1])
dathclust<-hclust(distmatrix)
dathclust$labels <- dat$ID
#plots typical dendrogram or heatmap
p <- ifelse(heatmap==F, yes = plot(dathclust),
no = heatmap(as.matrix(distmatrix)))
return(p)
}
startplot(D04_LSR)
startplot(D04_LSR, heatmap = TRUE)
plot(dathclust)
heatmap(as.matrix(distmatrix))
